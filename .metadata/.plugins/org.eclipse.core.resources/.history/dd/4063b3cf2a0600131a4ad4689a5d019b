package com.jemcphe.xcell;

import com.jemcphe.xcell.FragmentAdds.AppSectionsPagerAdapter;
import com.jemcphe.xcell.FragmentAdds.DummySectionFragment;
import com.jemcphe.xcell.FragmentAdds.SectionFragment2;
import com.jemcphe.xcell.FragmentAdds.SectionFragment3;

import android.app.ActionBar.Tab;
import android.app.ActionBar.TabListener;
import android.app.ActionBar;
import android.app.Fragment;
import android.app.FragmentTransaction;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class MyDataActivity extends Fragment implements TabListener {

	/**
	 * The {@link android.support.v4.view.PagerAdapter} that will provide fragments for each of the
	 * three primary sections of the app. We use a {@link android.support.v4.app.FragmentPagerAdapter}
	 * derivative, which will keep every loaded fragment in memory. If this becomes too memory
	 * intensive, it may be best to switch to a {@link android.support.v4.app.FragmentStatePagerAdapter}.
	 */
	AppSectionsPagerAdapter mAppSectionsPagerAdapter;

	/**
	 * The {@link ViewPager} that will display the three primary sections of the app, one at a
	 * time.
	 */
	ViewPager mViewPager;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState) {
    	
        View rootView = inflater.inflate(R.layout.adds_layout, container, false);
        
     // Create the adapter that will return a fragment for each of the three primary sections
     		// of the app.
     		mAppSectionsPagerAdapter = new AppSectionsPagerAdapter(((FragmentActivity) getActivity()).getSupportFragmentManager());

     		// Set up the action bar.
     		final ActionBar actionBar = getActivity().getActionBar();

     		// Specify that the Home/Up button should not be enabled, since there is no hierarchical
     		// parent.
     		actionBar.setHomeButtonEnabled(true);

     		// Specify that we will be displaying tabs in the action bar.
     		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);

     		// Set up the ViewPager, attaching the adapter and setting up a listener for when the
     		// user swipes between sections.
     		mViewPager = (ViewPager) getActivity().findViewById(R.id.pager);
     		mViewPager.setAdapter(mAppSectionsPagerAdapter);
     		mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {
     			@Override
     			public void onPageSelected(int position) {
     				// When swiping between different app sections, select the corresponding tab.
     				// We can also use ActionBar.Tab#select() to do this if we have a reference to the
     				// Tab.
     				actionBar.setSelectedNavigationItem(position);
     			}
     		});

     		// For each of the sections in the app, add a tab to the action bar.
     		for (int i = 0; i < mAppSectionsPagerAdapter.getCount(); i++) {
     			// Create a tab with text corresponding to the page title defined by the adapter.
     			// Also specify this Activity object, which implements the TabListener interface, as the
     			// listener for when this tab is selected.
     			actionBar.addTab(
     					actionBar.newTab()
     					.setText(mAppSectionsPagerAdapter.getPageTitle(i))
     					.setTabListener(this));
     		}
        
        return rootView;
    }
	
	
	@Override
	public void onTabReselected(Tab tab, FragmentTransaction ft) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onTabSelected(Tab tab, FragmentTransaction ft) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onTabUnselected(Tab tab, FragmentTransaction ft) {
		// TODO Auto-generated method stub

	}
	
	/**
	 * A {@link FragmentPagerAdapter} that returns a fragment corresponding to one of the primary
	 * sections of the app.
	 */
	public static class AppSectionsPagerAdapter extends FragmentPagerAdapter {

		public AppSectionsPagerAdapter(FragmentManager fragmentManager) {
			super(fragmentManager);
			
		}

		@Override
		public android.support.v4.app.Fragment getItem(int position) {
			switch (position) {
			case 0:
				DummySectionFragment sectionOneFrag = new DummySectionFragment();
				Bundle args1 = new Bundle();
				args1.putInt(DummySectionFragment.ARG_SECTION_NUMBER, position + 1);
				sectionOneFrag.setArguments(args1);
				return sectionOneFrag;
			case 1:
				android.support.v4.app.Fragment sectionTwoFrag = new SectionFragment2();
				Bundle args2 = new Bundle();
				args2.putInt(SectionFragment2.ARG_SECTION_NUMBER, position + 1);
				sectionTwoFrag.setArguments(args2);
				return sectionTwoFrag;
			case 2:
				android.support.v4.app.Fragment sectionThreeFrag = new SectionFragment3();
				Bundle args3 = new Bundle();
				args3.putInt(SectionFragment3.ARG_SECTION_NUMBER, position + 1);
				sectionThreeFrag.setArguments(args3);
				return sectionThreeFrag;
			default:
				// The other sections of the app are dummy placeholders.
				android.support.v4.app.Fragment fragment = new DummySectionFragment();
				Bundle args = new Bundle();
				args.putInt(DummySectionFragment.ARG_SECTION_NUMBER, position + 1);
				fragment.setArguments(args);
				return fragment;
			}
		}

		@Override
		public int getCount() {
			return 3;
		}

		@Override
		public CharSequence getPageTitle(int position) {
			return "Section " + (position + 1);
		}
	}
	
	public static class DummySectionFragment extends android.support.v4.app.Fragment {
		/**
		 * The fragment argument representing the section number for this
		 * fragment.
		 */
		public static final String ARG_SECTION_NUMBER = "section_number";

		public DummySectionFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {

			View rootView = inflater.inflate(R.layout.fragment_main_dummy, container, false);
			TextView dummyTextView = (TextView) rootView.findViewById(R.id.section_label);
			dummyTextView.setText(Integer.toString(getArguments().getInt(ARG_SECTION_NUMBER)));
			return rootView;
		}
	}

	public static class SectionFragment2 extends android.support.v4.app.Fragment {
		/**
		 * The fragment argument representing the section number for this
		 * fragment.
		 */
		public static final String ARG_SECTION_NUMBER = "section_number";

		public SectionFragment2() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {

			View rootView = inflater.inflate(R.layout.fragment_section2, container, false);
			TextView dummyTextView = (TextView) rootView.findViewById(R.id.section_label);
			dummyTextView.setText(Integer.toString(getArguments().getInt(ARG_SECTION_NUMBER)));
			return rootView;
		}
	}

	public static class SectionFragment3 extends android.support.v4.app.Fragment {
		/**
		 * The fragment argument representing the section number for this
		 * fragment.
		 */
		public static final String ARG_SECTION_NUMBER = "section_number";

		public SectionFragment3() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {

			View rootView = inflater.inflate(R.layout.fragment_section3, container, false);
			TextView dummyTextView = (TextView) rootView.findViewById(R.id.section_label);
			dummyTextView.setText(Integer.toString(getArguments().getInt(ARG_SECTION_NUMBER)));
			return rootView;
		}
	}

}
